import { NextRequest, NextResponse } from 'next/server';\nimport { supabase } from '@/lib/supabase';\n\nexport const GET = async (req: NextRequest) => {\n  try {\n    console.log('Testing Supabase connection...');\n    \n    // Test a simple select query first\n    const { data, error, count } = await supabase\n      .from('new_camp')\n      .select('*', { count: 'exact' })\n      .limit(1);\n\n    if (error) {\n      console.error('Supabase select error:', error);\n      return NextResponse.json(\n        { error: 'Database connection failed', details: error.message },\n        { status: 500 }\n      );\n    }\n\n    console.log('Select query successful. Record count:', count);\n\n    // Now test a simple insert\n    const testData = {\n      info_json: JSON.stringify({\n        test: true,\n        timestamp: new Date().toISOString(),\n        source: 'api_test'\n      })\n    };\n\n    const { data: insertData, error: insertError } = await supabase\n      .from('new_camp')\n      .insert([testData])\n      .select();\n\n    if (insertError) {\n      console.error('Supabase insert error:', insertError);\n      return NextResponse.json(\n        { \n          error: 'Insert failed', \n          details: insertError.message,\n          selectWorked: true,\n          recordCount: count\n        },\n        { status: 500 }\n      );\n    }\n\n    console.log('Insert successful:', insertData);\n\n    return NextResponse.json({\n      success: true,\n      message: 'Both select and insert operations successful',\n      selectRecordCount: count,\n      insertedRecord: insertData[0]\n    });\n\n  } catch (error) {\n    console.error('Error testing database:', error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'An unknown error occurred' },\n      { status: 500 }\n    );\n  }\n};\n\nexport const POST = async (req: NextRequest) => {\n  try {\n    const body = await req.json();\n    console.log('Test POST received:', body);\n    \n    return NextResponse.json({\n      success: true,\n      message: 'Test POST endpoint working',\n      receivedData: body\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { error: 'Failed to parse JSON' },\n      { status: 400 }\n    );\n  }\n};\n